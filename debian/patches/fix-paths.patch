Description: Upstream changes introduced in version 0.0.0-1
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 jpgcrush (0.0.0-1) unstable; urgency=low
 .
   * Initial release (Closes: #nnnn)  <nnnn is the bug number of your ITP>
 .
 The person named in the Author field signed this changelog entry.
Author: Rog√©rio Brito <rbrito@ime.usp.br>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- a/jpgcrush
+++ b/jpgcrush
@@ -32,14 +32,14 @@
     printf "\r[%d/%d %.2f%%]  %s    ", $n, $#ARGV+1, 100*($css/$iss-1), $if;
     unlink $cf;
     if($f) {
-        $err = `jpegtran $opts -scans ~/src/perl/jpeg_scan_rgb.txt "$if" 2>&1 >"$cf"`;
+        $err = `jpegtran $opts -copy all -scans /usr/share/jpgcrush/jpeg_scan_rgb.txt "$if" 2>&1 >"$cf"`;
         # I don't know a fast way to distinguish color from grayscale input
         # (short of invoking a whole extra copy of jpegtran or identify),
         # so just let the error message tell me.
         # jpegtran will also error out if I use the grayscale scan on a color
         # image, so there's no risk of accidental conversion.
         if($err =~ /Invalid scan script at entry 2/) {
-            $err = `jpegtran $opts -scans ~/src/perl/jpeg_scan_bw.txt "$if" 2>&1 >"$cf"`;
+            $err = `jpegtran $opts -copy all -scans /usr/share/jpgcrush/jpeg_scan_bw.txt "$if" 2>&1 >"$cf"`;
         }
         $err and warn "\njpegtran failed:\n$err\n" and next;
     } else {
--- a/jpegrescan
+++ b/jpegrescan
@@ -20,7 +20,7 @@
 # FIXME there's still a bunch of redundant computation in separate calls to jpegtran
 open $OLDERR, ">&", STDERR;
 open STDERR, ">", $ftmp;
-open TRAN, "-|", "jpegtran", "-v", "-optimize", $fin or die;
+open TRAN, "-|", "jpegtran", "-copy", "all", "-v", "-optimize", $fin or die;
 write_file($jtmp, <TRAN>);
 close TRAN;
 open STDERR, ">&", $OLDERR;
@@ -48,7 +48,7 @@
     my $txt = canonize(shift);
     return $memo{$txt} if $memo{$txt};
     write_file($ftmp, $txt);
-    open TRAN, "-|", "jpegtran", "-scans", $ftmp, @restart, $jtmp or die;
+    open TRAN, "-|", "jpegtran", "-copy", "all", "-scans", $ftmp, @restart, $jtmp or die;
     $data = <TRAN>;
     close TRAN;
     my $s = length $data;
